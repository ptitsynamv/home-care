import { Providers } from "@/app/[locale]/providers";
import { Locale } from "@/app/types";
import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { Geist, Geist_Mono, Inter } from "next/font/google";
import { notFound } from "next/navigation";
import "../globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Home Care",
  description: "Generated by create next app",
};

const inter = Inter({ subsets: ["latin"] });

type Props = {
  children: React.ReactNode;
  params: { locale: Locale };
};

export default async function LocaleLayout({ children, params: { locale } }: Props) {
  let messages;
  console.log('LocaleLayout');

  try {
    messages = (await import(`../../messages/${locale}.json`)).default;
    console.log({ messages });

  } catch (error: unknown) {
    console.log({ error });
    notFound();
  }

  return (
    <html lang={locale} className={inter.className}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-white`}
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          <Providers>{children}</Providers>
        </NextIntlClientProvider>
      </body>
    </html>

  );
}
